name: mpv AppImage2
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 16 1/7 * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: alpine:latest
    steps:
    - uses: actions/checkout@v4

    - name: build
      run: |
        apk add coreutils bash wget git build-base autoconf automake libtool yasm \
        libx11-dev fribidi-dev freetype-dev harfbuzz-dev libxinerama-dev \
        libxrandr-dev freetype-dev alsa-lib-dev ffmpeg-dev jack-dev libao-dev \
        libarchive-dev libass-dev libbluray-dev libcaca-dev \
        libcdio-paranoia-dev libdvdnav-dev libplacebo-dev libsixel-dev libva-dev \
        libxext-dev libxinerama-dev libxkbcommon-dev libxpresent-dev libxrandr-dev \
        libxscrnsaver-dev libxv-dev mesa-dev meson pipewire-dev pulseaudio-dev \
        py3-docutils rubberband-dev shaderc-dev sndio-dev uchardet-dev ninja-build \
        vulkan-headers vulkan-loader-dev wayland-dev wayland-protocols zimg-dev \
        zlib-dev luajit-dev lua5.3-dev libxcb-dev desktop-file-utils

        ln -sf /usr/lib/ninja-build/bin/ninja /usr/bin/ninja

        chmod a+x ./mpv-AppImage.sh && ./mpv-AppImage.sh
        mkdir dist
        mv *.AppImage* dist/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mpv-x86_64.AppImage
        path: 'dist'
        
  release:
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v4
          with:
            name: mpv-x86_64.AppImage

        - name: release
          uses: marvinpinto/action-automatic-releases@latest
          with:
            title: Continuous build
            automatic_release_tag: test
            prerelease: false
            draft: true
            files: |
              *.AppImage*
            repo_token: ${{ secrets.GITHUB_TOKEN }}
